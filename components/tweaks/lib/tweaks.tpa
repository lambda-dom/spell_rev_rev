//Includes.
//Libraries.
INCLUDE ~%LIBRARY_DIR%/spells/main.tpa~
INCLUDE ~%LIBRARY_DIR%/installers/components/spells/main.tpa~

//Patch functions.
DEFINE_PATCH_FUNCTION STANDARDIZE_SUMMON_DURATION
BEGIN
    FOR (i = 1; i < 9; ++i) BEGIN
        TEXT_SPRINT spell_name "WIZARD_MONSTER_SUMMONING_LEVEL_%i%"
        LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell_name%~ RET res = spell_res END
        INNER_ACTION BEGIN
            COPY_EXISTING ~%res%.spl~ ~override~
                LPF ALTER_SPELL_EFFECT INT_VAR
                    //Use Eff.
                    match_opcode = 177
                    duration = 300
                END
                //Patch descriptions.
                READ_STRREF $SPELL_OFFSETS("descr") descr
                INNER_PATCH_SAVE changes ~%descr%~ BEGIN
                    REPLACE_TEXTUALLY "^Duration: [1-9][0-9]* \(turn\|round\)\(s\)?" "Duration: 5 turns"
                END
                LPF PATCH_SET_DESCRIPTION STR_VAR descr = ~%changes%~ END
            BUT_ONLY
        END
    END
    FOR (i = 1; i <= 7; ++i) BEGIN
        TEXT_SPRINT spell_name "CLERIC_ANIMAL_SUMMONING_LEVEL_%i%"
        LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell_name%~ RET res = spell_res END
        INNER_ACTION BEGIN
            COPY_EXISTING ~%res%.spl~ ~override~
                LPF ALTER_SPELL_EFFECT INT_VAR
                    //Use Eff.
                    match_opcode = 177
                    duration = 300
                END
                //Patch descriptions.
                READ_STRREF $SPELL_OFFSETS("descr") descr
                INNER_PATCH_SAVE changes ~%descr%~ BEGIN
                    REPLACE_TEXTUALLY "^Duration: [1-9][0-9]* \(turn\|round\)\(s\)?" "Duration: 5 turns"
                END
                LPF PATCH_SET_DESCRIPTION STR_VAR descr = ~%changes%~ END
            BUT_ONLY
        END
    END
END

DEFINE_PATCH_FUNCTION WIZARD_ARMOR_SPELLS
BEGIN
    //Armor.
    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = "WIZARD_ARMOR" RET res = spell_res END
    INNER_ACTION BEGIN
        COPY_EXISTING ~%res%.spl~ ~override~
            LPF GET_SPELL_HEADER_COUNT RET headers_count = count END
            //Drop last level.
            LPF REMOVE_SPELL_HEADER INT_VAR header = (headers_count - 1) END
            //Re-level.
            LPF WRITE_SPELL_HEADER_FIELD INT_VAR header = 1 STR_VAR field = "min_level" value = "5" END
            LPF WRITE_SPELL_HEADER_FIELD INT_VAR header = 2 STR_VAR field = "min_level" value = "9" END
            //Patch in non-stackage with other armor spells.
            FOR (i = 1; i <= headers_count; ++i) BEGIN
                PATCH_FOR_EACH spell IN "WIZARD_GHOST_ARMOR" "WIZARD_SPIRIT_ARMOR" BEGIN
                    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell%~ RET res_aux = spell_res END
                    LPF ADD_SPELL_EFFECT INT_VAR
                        header = i
                        opcode = 206        //Protection from spell.
                        target = 1
                        power = 1
                        resist_dispel = 3
                        duration = 2400
                        insert_point = 0 - 1
                    STR_VAR
                        resource = ~%res_aux%~
                    END
                END
            END
            //Patch description.
            LPF PATCH_SET_DESCRIPTION INT_VAR ref = 1000 END
        BUT_ONLY
    END
    //Ghost Armor.
    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = "WIZARD_GHOST_ARMOR" RET res = spell_res END
    INNER_ACTION BEGIN
        COPY_EXISTING ~%res%.spl~ ~override~
            LPF GET_SPELL_HEADER_COUNT RET headers_count = count END
            FOR (i = 1; i <= headers_count; ++i) BEGIN
                //Patch in non-stackage with other armor spells.
                PATCH_FOR_EACH spell IN "WIZARD_ARMOR" "WIZARD_SPIRIT_ARMOR" BEGIN
                    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell%~ RET res_aux = spell_res END
                    LPF ADD_SPELL_EFFECT INT_VAR
                        header = i
                        opcode = 206        //Protection from spell.
                        target = 1
                        power = 3
                        resist_dispel = 3
                        duration = 600
                        insert_point = 0 - 1
                    STR_VAR
                        resource = ~%res_aux%~
                    END
                END
            END
            //Patch description.
            LPF PATCH_SET_DESCRIPTION INT_VAR ref = 1001 END
        BUT_ONLY
    END
    //Spirit Armor.
    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = "WIZARD_SPIRIT_ARMOR" RET res = spell_res END
    INNER_ACTION BEGIN
        COPY_EXISTING ~%res%.spl~ ~override~
            //Patch in non-stackage with other armor spells.
            LPF GET_SPELL_HEADER_COUNT RET headers_count = count END
            FOR (i = 1; i <= headers_count; ++i) BEGIN
                PATCH_FOR_EACH spell IN "WIZARD_ARMOR" "WIZARD_GHOST_ARMOR" BEGIN
                    LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell%~ RET res_aux = spell_res END
                    LPF ADD_SPELL_EFFECT INT_VAR
                        header = i
                        opcode = 206        //Protection from spell.
                        target = 1
                        power = 4
                        resist_dispel = 3
                        duration = 600
                        insert_point = 0 - 1
                    STR_VAR
                        resource = ~%res_aux%~
                    END
                END
            END
            //Patch description.
            LPF PATCH_SET_DESCRIPTION INT_VAR ref = 1002 END
        BUT_ONLY
    END
END

DEFINE_PATCH_FUNCTION NON_COMBAT_TRIGGERS_CONTINGENCIES
BEGIN
    PATCH_FOR_EACH spell IN "WIZARD_MINOR_SEQUENCER" "WIZARD_SPELL_SEQUENCER" "WIZARD_SPELL_TRIGGER" "WIZARD_CONTINGENCY" "WIZARD_CHAIN_CONTINGENCY" BEGIN
        //Get resource name.
        LPF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell%~ RET res = spell_res END
        INNER_ACTION BEGIN
            //Copy resource spell.
            COPY_EXISTING ~%res%.spl~ ~override~
                //Toggle ignore wild-magic and non-combat flags by bitwise OR-ing.
                WRITE_BYTE ($SPELL_OFFSETS("flags") + 1) (THIS | 0b11000000)
                WRITE_BYTE ($SPELL_OFFSETS("flags") + 2) (THIS | 0b00000001)
            BUT_ONLY
        END
    END
END